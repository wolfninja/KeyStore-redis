buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'biz.aQute.bnd:biz.aQute.bnd.gradle:3.0.+'
  }
}

apply plugin: 'java'
apply plugin: 'biz.aQute.bnd.builder'
apply plugin: 'eclipse-wtp'
apply plugin: 'maven'
apply plugin: 'signing'

version = '0.1.0'
group 'com.wolfninja.keystore'
ext.packaging = 'jar'

repositories {
	mavenLocal()
	mavenCentral()
}

def isDevBuild
def isCiBuild
def isReleaseBuild

dependencies {
	compile 'com.wolfninja.keystore:keystore-api:0.1.0-SNAPSHOT'
	testCompile 'com.wolfninja.keystore:keystore-api:1.0.0-SNAPSHOT:tests@jar'
	
	compile 'com.google.code.findbugs:jsr305:3.0.1'
	compile 'biz.aQute.bnd:biz.aQute.bnd.annotation:3.0.0'
	
	compile 'redis.clients:jedis:2.8.0'
	
	testCompile 'com.fiftyonred:mock-jedis:0.4.0'
	
	testCompile 'org.testng:testng:6.9.9'
	testCompile 'org.easymock:easymock:3.4'
	testCompile 'org.powermock:powermock-module-testng:1.6.4'
	testCompile 'org.powermock:powermock-api-easymock:1.6.4'
}

sourceSets {
	integration {
		java {
			srcDir 'src/integration/java'
		}
		resources {
			srcDir 'src/integration/resources'
		}
		compileClasspath += sourceSets.test.runtimeClasspath
	}
}


task integrationTest(type: Test) {
	description = "Run integration tests (from src/integration)"
	testClassesDir = sourceSets.integration.output.classesDir
	classpath += sourceSets.integration.runtimeClasspath
	reports.html.enabled = false
}

task integrationTestReport(type: TestReport) {
	destinationDir = file("$buildDir/reports/integrationTest")
	reportOn integrationTest.binResultsDir
}
integrationTestReport.shouldRunAfter integrationTest
integrationTest.finalizedBy integrationTestReport

integrationTest.useTestNG()
test.useTestNG()

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

artifacts {
	archives jar

	archives javadocJar
	archives sourcesJar
}

if(hasProperty("release")) {
	isReleaseBuild = true
} else if (hasProperty("ci")) {
	isCiBuild = true
	version += "-SNAPSHOT"
} else {
	isDevBuild = true
	version += "-SNAPSHOT"
}

uploadArchives {
	repositories {
		if(isDevBuild) {
			mavenLocal()
		}
	}
}
